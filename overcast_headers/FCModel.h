//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDictionary, NSError;

@interface FCModel : NSObject
{
    BOOL existsInDatabase;
    BOOL deleted;
    NSDictionary *__rowValuesInDatabase;
    NSError *__lastSQLiteError;
}

+ (void)postChangeNotification:(id)arg1 changedFields:(id)arg2 instance:(id)arg3;
+ (void)performWithBatchedNotifications:(CDUnknownBlockType)arg1 deliverOnCompletion:(BOOL)arg2;
+ (void)performWithBatchedNotifications:(CDUnknownBlockType)arg1;
+ (void)_endNotificationBatchAndNotify:(BOOL)arg1;
+ (void)_beginNotificationBatch;
+ (void)endNotificationBatchAndNotify:(BOOL)arg1;
+ (void)beginNotificationBatch;
+ (void)inDatabaseSync:(CDUnknownBlockType)arg1;
+ (BOOL)databaseIsOpen;
+ (BOOL)closeDatabase;
+ (void)openDatabaseAtPath:(id)arg1 withDatabaseInitializer:(CDUnknownBlockType)arg2 schemaBuilder:(CDUnknownBlockType)arg3;
+ (void)openDatabaseAtPath:(id)arg1 withSchemaBuilder:(CDUnknownBlockType)arg2;
+ (id)expandQuery:(id)arg1;
+ (void)saveAll;
+ (id)new;
+ (id)primaryKeyValueForNewInstance;
+ (void)queryFailedInDatabase:(id)arg1;
+ (id)firstValueFromQuery:(id)arg1;
+ (id)resultDictionariesFromQuery:(id)arg1;
+ (id)firstColumnArrayFromQuery:(id)arg1;
+ (unsigned int)numberOfInstancesWhere:(id)arg1;
+ (unsigned int)numberOfInstances;
+ (id)keyedInstancesWithPrimaryKeyValues:(id)arg1;
+ (id)instancesWithPrimaryKeyValues:(id)arg1;
+ (id)keyedAllInstances;
+ (id)allInstances;
+ (id)instancesOrderedBy:(id)arg1;
+ (id)firstInstanceOrderedBy:(id)arg1;
+ (id)keyedInstancesWhere:(id)arg1;
+ (id)instancesWhere:(id)arg1 arguments:(id)arg2;
+ (id)instancesWhere:(id)arg1;
+ (id)firstInstanceWhere:(id)arg1;
+ (id)firstInstanceFromResultSet:(id)arg1;
+ (id)keyedInstancesFromResultSet:(id)arg1;
+ (id)instancesFromResultSet:(id)arg1;
+ (id)_instancesWhere:(id)arg1 andArgs:(void *)arg2 orArgsArray:(id)arg3 orResultSet:(id)arg4 onlyFirst:(BOOL)arg5 keyed:(BOOL)arg6;
+ (id)executeUpdateQuery:(id)arg1;
+ (id)cachedObjectWithIdentifier:(id)arg1 ignoreFieldsForInvalidation:(id)arg2 generator:(CDUnknownBlockType)arg3;
+ (id)cachedObjectWithIdentifier:(id)arg1 generator:(CDUnknownBlockType)arg2;
+ (id)cachedInstancesWhere:(id)arg1 arguments:(id)arg2 ignoreFieldsForInvalidation:(id)arg3;
+ (id)cachedInstancesWhere:(id)arg1 arguments:(id)arg2;
+ (id)normalizedPrimaryKeyValue:(id)arg1;
+ (id)infoForFieldName:(id)arg1;
+ (id)primaryKeyFieldName;
+ (id)databaseFieldNames;
+ (void)dataWasUpdatedExternally;
+ (id)instanceFromDatabaseWithPrimaryKey:(id)arg1;
+ (id)instanceWithPrimaryKey:(id)arg1 databaseRowValues:(id)arg2 createIfNonexistent:(BOOL)arg3;
+ (id)instanceWithPrimaryKey:(id)arg1 createIfNonexistent:(BOOL)arg2;
+ (id)instanceWithPrimaryKey:(id)arg1;
+ (id)allLoadedInstances;
+ (void)initialize;
@property(copy, nonatomic) NSError *_lastSQLiteError; // @synthesize _lastSQLiteError=__lastSQLiteError;
@property(copy, nonatomic) NSDictionary *_rowValuesInDatabase; // @synthesize _rowValuesInDatabase=__rowValuesInDatabase;
- (void).cxx_destruct;
- (unsigned int)hash;
@property(readonly) NSDictionary *allFields;
- (id)description;
@property(readonly) id primaryKey;
- (void)removeFromCache;
- (int)delete;
- (int)save;
- (id)changedFieldNames;
- (id)unsavedChanges;
@property(readonly) BOOL hasUnsavedChanges;
@property(readonly) BOOL existsInDatabase;
- (void)dealloc;
- (void)revertUnsavedChangeToFieldName:(id)arg1;
- (void)revertUnsavedChanges;
- (id)valueOfFieldName:(id)arg1 byResolvingReloadConflictWithDatabaseValue:(id)arg2;
- (void)reload:(id)arg1;
- (void)saveByNotification:(id)arg1;
- (id)initWithFieldValues:(id)arg1 existsInDatabaseAlready:(BOOL)arg2;
- (id)init;
- (void)decodeFieldValue:(id)arg1 intoPropertyName:(id)arg2;
- (id)unserializedRepresentationOfDatabaseValue:(id)arg1 forPropertyNamed:(id)arg2;
- (id)encodedValueForFieldName:(id)arg1;
- (id)serializedDatabaseRepresentationOfValue:(id)arg1 forPropertyNamed:(id)arg2;
- (void)saveDidFail;
- (void)saveWasRefused;
- (void)didDelete;
- (void)didUpdate;
- (void)didInsert;
- (BOOL)shouldDelete;
- (BOOL)shouldUpdate;
- (BOOL)shouldInsert;
- (void)didInit;
@property(readonly) BOOL isDeleted;
@property(readonly) NSError *lastSQLiteError;

@end

